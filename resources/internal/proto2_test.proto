/* Task object blah blah adsd
sfsf fafasf affaf fasfaf
*/
syntax = "proto2";
package logtask;

//import public "new.proto";
//import "other.proto";

// LogTask is a service which handles operations on tasks defined via a custom DSL
service LogTask {
  rpc AddTask (Task) returns (TaskId) {}
  rpc ListTasks(TaskListOptions) returns (TaskList) {}
  rpc UpdateTask(TaskUpdateOptions) returns (ReturnStatus) {}
  rpc DeleteTask(TaskId) returns (ReturnStatus) {}
  rpc RouteChat(TaskId) returns (stream ReturnStatus) {}
}

service AuditTask {
  rpc AuditTask (Task) returns (TaskId) {}
}

// Id of the Task...
message TaskId {
  required string id = 1;
}

// Task object...
message Task {
  required string name = 1;
  required string id = 2;
  optional string desc = 3;
  required string priority = 4;
  required string for = 5;
  required string on = 6;
  required string starting = 7;
  required string remind = 8;
  required string location = 9;
  repeated string tags = 10;  
  repeated string comments = 11;
  oneof fizzbuzz {
    string fizz = 12;
    int32 buzz = 13;
  }  
}

// List of tasks...
message TaskList {
  repeated Task tasks = 1;
}

// Options to pass in a params for listing tasks...
message TaskListOptions {
  required string status = 1;
  required string for = 2;
  extensions 500 to 600;
}

extend TaskListOptions {
  optional int32 bar = 510;
}

// Options to pass in for updating a task...
message TaskUpdateOptions {
  required TaskId taskId = 1;
  required Task task = 2;
  reserved 13, 12, 9 to 11;
}

// Return status of delete and update task operations...
message ReturnStatus {
  required bool success = 1;
  optional string message = 2;
  reserved "foo", "bar";
}

message SearchResponse {
  message Result {
    required string url = 1;
    required string title = 2;
    repeated string snippets = 3;
  }
  repeated Result result = 1;
  map<string, ReturnStatus> statusmap = 2;
}

//extend SearchResponse {
//  map<string, ReturnStatus> statusmap = 310;
//}

// EnumAllowingAlias docs for testing...
enum EnumAllowingAlias {
  UNKNOWN = 0;
  STARTED = 1;
  RUNNING = 2;
}
